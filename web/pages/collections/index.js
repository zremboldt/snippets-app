import { Dialog, DialogTrigger, DialogWrapper } from '../../components/dialog';
import Head from 'next/head'
import { useState, useEffect } from 'react'
import DialogCreateSnippet from '../../components/dialog_create-snippet';
import { styled } from '@stitches/react';
import { baseButtonStyles } from '../../styles/base-styles';
import TextCard from '../../components/text-card';
import ImageCard from '../../components/image-card';
import kebabCase from 'lodash.kebabcase';
import Link from 'next/link'

export default function Collections() {
  const [open, setOpen] = useState(false);
  const [data, setData] = useState(null);
  const [isLoading, setLoading] = useState(true);

  useEffect(() => {
    setLoading(true)
    fetch('http://localhost:3000/api/v1/collections', {
      method: "GET",
      headers: { "Content-Type": 'application/json' },
    })
      .then((res) => res.json())
      .then(({ status, message, data }) => {
        setData(data)
        setLoading(false)
      })
  }, [])

  return (
    <div className='layout'>
      <Head>
        <title>Snippets</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <PageTitle>Collections</PageTitle>

        <Grid>
          <Card href={`/collections/all-snippets`}>All snippets</Card>
          {data && data.map((collection) => {
            return (
              <Card
                key={collection.id}
                href={`/collections/${collection.id}`}
              >
                {collection.name}
              </Card>
            )
          })}
        </Grid>
      </main>

      <Dialog open={open} onOpenChange={() => setOpen(!open)}>
        <NewSnippetButton>New collection +</NewSnippetButton>
        <DialogWrapper>
          <DialogCreateSnippet
            setOpen={setOpen}
            data={data}
            setData={setData}
          />
        </DialogWrapper>
      </Dialog>
    </div>
  )
}

const PageTitle = styled('h1', {
  marginBottom: 60,
});

const Grid = styled('div', {
  display: 'grid',
  gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',
  gap: 24,
});

const Card = styled('a', {
  padding: 'var(--padding-card)',
  backgroundColor: 'white',
  borderRadius: 'var(--border-radius-card)',
  fontWeight: 'bold',
});

const NewSnippetButton = styled(DialogTrigger, {
  ...baseButtonStyles,
  position: 'fixed',
  bottom: 'min(30px, 2vw)',
  right: 'min(30px, 2vw)',
  '&:focus-visible': {
    outline: '3px solid black',
    outlineOffset: 3,
  }
});