import { Dialog, DialogTrigger, DialogWrapper } from '../../components/dialog';
import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/AllSnippets.module.css'
import { useState, useEffect } from 'react'
import NewSnippet from '../../components/new-snippet';
import { styled } from '@stitches/react';
import { baseButtonStyles } from '../../styles/base-styles';

export default function AllSnippets() {
  const [data, setData] = useState(null)
  const [isLoading, setLoading] = useState(false)

  useEffect(() => {
    setLoading(true)
    fetch('http://localhost:3000/api/v1/snippets', {
      method: "GET",
      headers: { "Content-Type": 'application/json' },
    })
      .then((res) => res.json())
      .then(({ status, message, data }) => {
        setData(data)
        setLoading(false)
      })
  }, [])

  if (isLoading) return <p>Loading...</p>
  if (!data) return <p>No snippets found.</p>

  return (
    <div className={'layout'}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          All Snippets
        </h1>



        <div className={styles.grid}>
          {data.map(({ note, title, image }, i) => {
            if (image) {
              return (
                <div className={styles.imageCard} key={i}>
                  <Image
                    src={image}
                    width={300}
                    height={300}
                    alt={title}
                  />
                  <div className={styles.imageCardTextContainer}>
                    {title && <h3>{title}</h3>}
                    {note && <p>{note}</p>}
                  </div>
                </div>
              )
            }

            return (
              <div className={styles.textCard} key={i}>
                {title && <h3>{title}</h3>}
                {note && <p>{note}</p>}
              </div>
            )
          })}
        </div>
      </main>

      <Dialog>
        <NewSnippetButton>New snippet +</NewSnippetButton>
        <DialogWrapper>
          <NewSnippet />
        </DialogWrapper>
      </Dialog>
    </div>
  )
}

const NewSnippetButton = styled(DialogTrigger, {
  ...baseButtonStyles,
  position: 'fixed',
  bottom: 'min(30px, 2vw)',
  right: 'min(30px, 2vw)',
  '&:focus-visible': {
    outline: '3px solid black',
    outlineOffset: 3,
  }
});